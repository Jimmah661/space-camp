{"version":3,"sources":["components/ProductCard.js","components/PageNavBar.js","components/BannerImage.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ProductCard","Card","style","width","Img","variant","src","Body","Title","Text","PageNavBar","Navbar","className","bg","expand","Brand","Toggle","aria-controls","Nav","Link","href","NavDropdown","title","Item","BannerImage","Jumbotron","fluid","position","zIndex","top","Image","height","styles","footerContainer","padding","marginHorizontal","list","listStyle","Footer","Container","Row","Col","id","float","OverlayTrigger","key","placement","overlay","Tooltip","class","InputGroup","FormControl","aria-label","placeholder","Append","Button","App","xs","sm","md","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.44d4b6ce.chunk.js","sourcesContent":["import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nconst ProductCard = () => {\n  return (\n    <Card style={{width: '18rem'}}>\n        <Card.Img variant=\"top\" src=\"https://via.placeholder.com/286x180.png\"/>\n        <Card.Body>\n          <Card.Title>Test Card</Card.Title>\n          <Card.Text>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ac blandit diam.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n  )\n}\n\nexport default ProductCard;","import React from 'react';\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap'\n\nconst PageNavBar = () => {\n  return (\n    <Navbar className=\"justify-content-between\" bg=\"light\" expand=\"lg\">\n      <Navbar.Brand>Space Camp</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Nav>\n        <Nav.Link href='#'>Shop</Nav.Link>\n        <Nav.Link href='#'>Science</Nav.Link>\n        <Nav.Link href='#'>Projects</Nav.Link>\n        <NavDropdown title=\"About\">\n          <NavDropdown.Item>FAQs</NavDropdown.Item>\n          <NavDropdown.Item>Contact</NavDropdown.Item>\n          <NavDropdown.Item>Stockists</NavDropdown.Item>\n        </NavDropdown>\n      </Nav>\n    </Navbar>\n  )\n}\n\nexport default PageNavBar;","import React from 'react';\nimport {Jumbotron, Image} from 'react-bootstrap'\nimport PageNavBar from './PageNavBar';\n\nconst BannerImage = () => {\n  return (\n    <Jumbotron fluid>\n      <PageNavBar style={{position: 'absolute', zIndex: 5, top: 0}}/>\n        <Image src=\"https://via.placeholder.com/728x90.png?text=Space+Camp,+Good+skin+by+interesting+organisms\" style={{width: '100%', height: '100%'}} fluid />\n    </Jumbotron>\n  )\n}\n\nexport default BannerImage;","import React from 'react';\nimport {Button, Container, Row, Col, InputGroup, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport './test.css'\n\nconst Footer = () => {\n  return(\n    <Container className=\"footerContainer\" fluid>\n      <Row>\n        <Col>\n          <ul id='socialIconsList'>\n            <li className='socialIconsSingle'>Facebook</li>\n            <li className='socialIconsSingle'>Instagram</li>\n            <li className='socialIconsSingle'>Twitter</li>\n          </ul>\n        </Col>\n        <Col>\n          <ul style={styles.list}>\n            <li>Shop</li>\n            <li>Science</li>\n            <li>Projects</li>\n            <li>FAQs</li>\n            <li>Contact</li>\n            <li>Stockists</li>\n          </ul>\n        </Col>\n        <Col>\n          <h4 style={{float: 'left'}}>Join our mailing List</h4>\n          <OverlayTrigger\n            key={'top'}\n            placement={'top'}\n            overlay={\n              <Tooltip id={'email-tooltip'}>\n                <p>Your privacy is important to us, we will never supply, sell or trade your information to other parties, we just want to tell you about the cool stuff we're doing</p>\n              </Tooltip>\n            }\n          >\n            <i class=\"fas fa-info-circle\"></i>\n          </OverlayTrigger>\n          <InputGroup>\n            <FormControl aria-label=\"Your contact email\" placeholder=\"Space-Camp@PlanetEarth.com.au\" />\n            <InputGroup.Append>\n              <Button variant=\"outline-secondary\">Join</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst styles = {\n  footerContainer: {\n    padding: '40px',\n    marginHorizontal: '0'\n  },\n\n  list: {\n    listStyle: 'none'\n  },\n}\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { ProductCard, BannerImage, Footer } from './components';\n\nfunction App() {\n  return (\n    <>\n    <Container fluid>\n      <BannerImage />\n      <Row xs={1} sm={2} md={3}>\n        <Col >\n          <ProductCard />\n        </Col>\n        <Col>\n          <ProductCard />\n        </Col>\n        <Col>\n          <ProductCard />\n        </Col>\n      </Row>\n      <h2>Latest Blog posts</h2>\n      <Row xs={1} sm={2} md={3}>\n        <Col >\n          <ProductCard />\n        </Col>\n        <Col>\n          <ProductCard />\n        </Col>\n        <Col>\n          <ProductCard />\n        </Col>\n      </Row>\n    </Container>\n      <Footer />\n      </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}